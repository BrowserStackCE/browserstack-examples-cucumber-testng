buildscript {
    ext {
        TESTNG_VERSION = '7.3.0'
        CUCUMBER_VERSION = '6.7.0'
       	APPLICATION_URL = 'http://bstackdemo.com/'
       	APPLICATION_LOCAL_URL = 'http://localhost:3000/'
       	
    }
}
plugins {
    id 'java'
}
version '1.0-SNAPSHOT'
repositories {
    mavenCentral()
}
dependencies {
   implementation 'io.cucumber:cucumber-jvm:6.10.4'
    testImplementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    testImplementation 'com.browserstack:browserstack-local-java:1.0.6'
    testImplementation 'org.apache.commons:commons-lang3:3.11'
    testImplementation 'org.slf4j:slf4j-api:1.7.30'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation 'org.testng:testng:7.4.0'
    testImplementation 'io.cucumber:cucumber-java:6.10.4'
    testImplementation 'io.cucumber:cucumber-core:6.10.4'
    testImplementation 'io.cucumber:cucumber-picocontainer:6.10.4'
    testImplementation 'io.cucumber:cucumber-testng:6.10.4'
    testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.2'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.12.2'
    implementation 'io.qameta.allure:allure-junit4:2.13.8'
	implementation group: 'io.qameta.allure', name: 'allure-cucumber6-jvm', version: '2.14.0' 
    implementation group: 'org.apache.maven.plugins', name: 'maven-surefire-plugin', version: '2.21.0'
	
}


test{
    useTestNG()

    // Force tests to always run, even if they haven't been updated (using "gradle clean" ensures this anyway)
    outputs.upToDateWhen { false }
    testLogging.events "passed", "skipped", "failed"
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = "full"

}
	
tasks.register('on-prem', Test) {
 	useTestNG() 
         if (System.getProperty("test-name") != null) {
        systemProperty("cucumber.filter.name", System.getProperty ("test-name"))
    } else {
        systemProperty("cucumber.filter.name", "End to End Scenario")
    }
 	 systemProperty 'capabilities.config', 'capabilities-on-prem.yml'
 
}



tasks.register('on-prem-suite', Test) {
 	useTestNG() {
        suites 'src/test/resources/conf/testng.xml'
       }

  systemProperty 'capabilities.config', 'capabilities-on-prem.yml'
    
}
tasks.register('docker', Test) {
 	useTestNG() {
        suites 'src/test/resources/conf/TestNG_Single.xml'
       }
         if (System.getProperty("test-name") != null) {
        systemProperty("cucumber.filter.name", System.getProperty ("test-name"))
    } else {
        systemProperty("cucumber.filter.name", "End to End Scenario")
    }
    systemProperty "environment", "docker"
    systemProperty "application_endpoint", "$APPLICATION_URL"
    
}
tasks.register('docker-parallel', Test) {
 	useTestNG() 
    systemProperty 'capabilities.config', 'capabilities-bstack-single.yml'
}



tasks.register('bstack-single', Test) {
useTestNG()

         if (System.getProperty("test-name") != null) {
        systemProperty("cucumber.filter.name", System.getProperty ("test-name"))
    } else {
        systemProperty("cucumber.filter.name", "End to End Scenario")
    }
    systemProperty 'capabilities.config', 'capabilities-bstack-single.yml'
    
}
tasks.register('bstack-local', Test) {
         if (System.getProperty("test-name") != null) {
        systemProperty("cucumber.filter.name", System.getProperty ("test-name"))
    } else {
        systemProperty("cucumber.filter.name", "End to End Scenario")
    }
    systemProperty "environment", "remote"
    systemProperty "application_endpoint", "$APPLICATION_LOCAL_URL"
    systemProperty "caps_type", "local"
    systemProperty "env_cap_id", "2"
 
}
tasks.register('bstack-local-parallel', Test) {
 	useTestNG() {
     suites 'src/test/resources/conf/TestNG_Parallel.xml'
     }
    systemProperty "environment", "remote"
    systemProperty "application_endpoint", "$APPLICATION_LOCAL_URL"
    systemProperty "caps_type", "local"
    
 
}

tasks.register('bstack-parallel', Test) {
useTestNG() {
        suites 'src/test/resources/conf/testng.xml'
       }
    systemProperty 'capabilities.config', 'capabilities-bstack-single.yml'
}



tasks.register('bstack-local-parallel-browsers', Test) {
 	useTestNG() {
     suites 'src/test/resources/conf/te.xml'
     }
    systemProperty "environment", "remote"
     systemProperty "caps_type", "local"
    systemProperty "application_endpoint", "$APPLICATION_LOCAL_URL"
     configure('bstack-parallel','capabilities-bstack-single.yml')
  
}
tasks.register('bstack-parallel-browsers', Test) {
 	useTestNG() {
     suites 'src/test/resources/conf/TestNG_MultipleParallel.xml'
     }
    systemProperty "environment", "remote"
    systemProperty "application_endpoint", "$APPLICATION_URL"
    
    
}
